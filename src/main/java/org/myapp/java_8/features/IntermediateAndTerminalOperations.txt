1.Intermediate Operation: These are operations that transform a stream into another stream. They are lazy,
meaning they donâ€™t process the data until a terminal operation is invoked.
----------------------------
1.filter(Predicate)
2.map(Function)      user for one-to-one mapping
3.flatMap(Function)  used for one-to-one mapping & data flattering
4.sorted()
5.sorted(Comparator)
6.distinct()
7.peek(Consumer)
8.limit(n)
9.skip(n)

2.Terminal Operations: These operations produce a result or a side-effect and terminate the
stream pipeline. Once a terminal operation is invoked, the stream cannot be reused.
----------------------------------
1.forEach(Consumer)
2.forEachOrdered()
3.min()
4.max()
5.count()
6.toArray()
7.collect(Collector)

8.reduce(BinaryOperator)
9.anyMatch(Predicate)
10.allMatch(Predicate)
11.noneMatch(Predicate)
12.findFirst()
13.findAny()